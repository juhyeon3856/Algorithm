# 19가지 경우의 수를 모두 더해보면서 완탐


# 19가지 경우의 수 -> 기준에서 상대 위치(기준 위치 제외하고 3개에 4번째 값은 범위 체크용)
ttype = [[(0, 1), (0, 2), (0, 3), (0, 3)],
         [(1, 0), (2, 0), (3, 0), (3, 0)],

         [(0, 1), (1, 1), (1, 2), (1, 2)],
         [(1, 0), (1, 1), (2, 1), (2, 1)],
         [(1, 0), (1, -1), (2, -1), (2, -1)],
         [(0, 1), (-1, 1), (-1, 2), (-1, 2)],

         [(1, 0), (1, 1), (0, 1), (1, 1)],

         [(1, 0), (2, 0), (2, 1), (2, 1)],
         [(1, 0), (0, 1), (0, 2), (1, 2)],
         [(0, 1), (1, 1), (2, 1), (2, 1)],

         [(0, 1), (0, 2), (-1, 2), (-1, 2)],
         [(1, 0), (2, 0), (0, 1), (2, 1)],
         [(1, 0), (1, 1), (1, 2), (1, 2)],
         [(1, 0), (2, 0), (2, -1), (2, -1)],
         [(0, 1), (0, 2), (1, 2), (1, 2)],

         [(0, 1), (0, 2), (1, 1), (1, 2)],
         [(1, 0), (2, 0), (1, -1), (2, -1)],
         [(0, 1), (0, 2), (-1, 1), (-1, 2)],
         [(1, 0), (2, 0), (1, 1), (2, 1)],
         ]


N, M = map(int, input().split())
arr = [list(map(int, input().split())) for _ in range(N)]


def check(fr, fc):
    return 0 <= fr < N and 0 <= fc < M


ans = 0  # 합의 최댓값 저장

for r in range(N):
    for c in range(M):
        for t in ttype:
            if not check(r + t[-1][0], c + t[-1][1]):  # 범위 밖이면
                continue  # 놓을 수 없음

            sm = arr[r][c]
            for d in range(3):
                sm += arr[r + t[d][0]][c + t[d][1]]

            ans = sm if sm > ans else ans  # ans 최대 갱신

# 정답 출력
print(ans)